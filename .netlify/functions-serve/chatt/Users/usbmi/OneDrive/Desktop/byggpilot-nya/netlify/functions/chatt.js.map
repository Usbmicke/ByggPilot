{
  "version": 3,
  "sources": ["../../../../OneDrive/Desktop/byggpilot-nya/netlify/functions/chatt.js"],
  "sourceRoot": "C:/Users/usbmi/AppData/Local/Temp/tmp-2752-mzSgjdVsoSBh",
  "sourcesContent": ["// Fil: /netlify/functions/chatt.js\r\n\r\nexports.handler = async function(event) {\r\n    // 1. H\u00E4mta anv\u00E4ndarens meddelande och system prompt fr\u00E5n anropet\r\n    const { message, systemPrompt, userContext } = JSON.parse(event.body);\r\n  \r\n    // 2. H\u00E4mta din hemliga API-nyckel\r\n    const apiKey = process.env.GOOGLE_API_KEY;\r\n  \r\n    // 3. Om nyckeln eller meddelandet saknas, skicka ett fel\r\n    if (!apiKey) {\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({ error: \"API-nyckel saknas.\" })\r\n      };\r\n    }\r\n    if (!message) {\r\n      return {\r\n        statusCode: 400,\r\n        body: JSON.stringify({ error: \"Inget meddelande skickades.\" })\r\n      };\r\n    }\r\n  \r\n    // 4. Bygg upp anropet till Google Gemini API med ByggPilot system prompt\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`;\r\n    \r\n    // Skapa kontextuell prompt baserat p\u00E5 anv\u00E4ndarens status\r\n    let contextualPrompt = systemPrompt || '';\r\n    \r\n    if (userContext) {\r\n      if (userContext.isGoogleConnected) {\r\n        contextualPrompt += '\\n\\nANSLUTNING STATUS: ByggPilots avancerade Google-integrationer \u00E4r nu aktiva. Du kan l\u00E4sa mail, skapa kalenderh\u00E4ndelser och hantera Drive-filer.';\r\n      } else {\r\n        contextualPrompt += '\\n\\nANSLUTNING STATUS: Google Workspace-integrationen \u00E4r inte aktiv. Du kan ge r\u00E5d men inte automatiskt agera p\u00E5 Google-tj\u00E4nster.';\r\n      }\r\n      \r\n      if (userContext.userRole) {\r\n        contextualPrompt += `\\nANV\u00C4NDARINFO: ${userContext.userRole}`;\r\n      }\r\n    }\r\n    \r\n    const requestBody = {\r\n      contents: [{\r\n        parts: [{\r\n          text: `${contextualPrompt}\\n\\nAnv\u00E4ndare: ${message}\\n\\nByggPilot:`\r\n        }]\r\n      }],\r\n      generationConfig: {\r\n        temperature: 0.7,\r\n        topK: 40,\r\n        topP: 0.95,\r\n        maxOutputTokens: 1000,\r\n      }\r\n    };\r\n  \r\n    // 5. Skicka anropet till Google och v\u00E4nta p\u00E5 svar\r\n    try {\r\n      const googleResponse = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n  \r\n      if (!googleResponse.ok) {\r\n          // Om Google svarar med ett fel, skicka vidare det\r\n          const errorData = await googleResponse.json();\r\n          return { statusCode: googleResponse.status, body: JSON.stringify(errorData) };\r\n      }\r\n  \r\n      const responseData = await googleResponse.json();\r\n      const aiResponseText = responseData.candidates[0].content.parts[0].text;\r\n  \r\n      // 6. Skicka tillbaka AI-svaret till din hemsida\r\n      return {\r\n        statusCode: 200,\r\n        body: JSON.stringify({ reply: aiResponseText }),\r\n      };\r\n  \r\n    } catch (error) {\r\n      // Om n\u00E5got annat g\u00E5r fel\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({ error: \"Ett fel uppstod vid anrop till Google.\" }),\r\n      };\r\n    }\r\n  };\r\n  "],
  "mappings": ";;;AAEA,QAAQ,UAAU,eAAe,OAAO;AAEpC,QAAM,EAAE,SAAS,cAAc,YAAY,IAAI,KAAK,MAAM,MAAM,IAAI;AAGpE,QAAM,SAAS,QAAQ,IAAI;AAG3B,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF;AACA,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC;AAAA,IAC/D;AAAA,EACF;AAGA,QAAM,SAAS,uGAAuG,MAAM;AAG5H,MAAI,mBAAmB,gBAAgB;AAEvC,MAAI,aAAa;AACf,QAAI,YAAY,mBAAmB;AACjC,0BAAoB;AAAA,IACtB,OAAO;AACL,0BAAoB;AAAA,IACtB;AAEA,QAAI,YAAY,UAAU;AACxB,0BAAoB;AAAA,mBAAmB,YAAY,QAAQ;AAAA,IAC7D;AAAA,EACF;AAEA,QAAM,cAAc;AAAA,IAClB,UAAU,CAAC;AAAA,MACT,OAAO,CAAC;AAAA,QACN,MAAM,GAAG,gBAAgB;AAAA;AAAA,gBAAkB,OAAO;AAAA;AAAA;AAAA,MACpD,CAAC;AAAA,IACH,CAAC;AAAA,IACD,kBAAkB;AAAA,MAChB,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,iBAAiB;AAAA,IACnB;AAAA,EACF;AAGA,MAAI;AACF,UAAM,iBAAiB,MAAM,MAAM,QAAQ;AAAA,MACzC,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,WAAW;AAAA,IAClC,CAAC;AAED,QAAI,CAAC,eAAe,IAAI;AAEpB,YAAM,YAAY,MAAM,eAAe,KAAK;AAC5C,aAAO,EAAE,YAAY,eAAe,QAAQ,MAAM,KAAK,UAAU,SAAS,EAAE;AAAA,IAChF;AAEA,UAAM,eAAe,MAAM,eAAe,KAAK;AAC/C,UAAM,iBAAiB,aAAa,WAAW,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE;AAGnE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC;AAAA,IAChD;AAAA,EAEF,SAAS,OAAO;AAEd,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,yCAAyC,CAAC;AAAA,IAC1E;AAAA,EACF;AACF;",
  "names": []
}
